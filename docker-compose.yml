version: "3"
services:
  redis:
    image: redis
    restart: always
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: outline
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    restart: always
  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9010:9010
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin1234
    volumes:
      - ./data/minio_root:/minio_root:z
      - ./data/certs:/root/.minio/certs:z
    command: "minio server /minio_root --console-address :9010"
    env_file: ./env.minio
    restart: always
  outline:
    container_name: outline
    image: docker.getoutline.com/outlinewiki/outline:latest
    #image: outlinewiki/outline:latest
    command: sh -c "yarn run sequelize db:migrate --env production-ssl-disabled && yarn start"
    ports:
      - 3000:3000
    #volumes:
      #- /var/www/certbot:/var/www/certbot  # 🔹 Certbot과 같은 볼륨 공유
    environment:
      - DATABASE_URL=postgres://user:pass@postgres:5432/outline
      - DATABASE_URL_TEST=postgres://user:pass@postgres:5432/outline-test
      - REDIS_URL=redis://redis:6379
      - CORS_ALLOW_ORIGIN=*
      #- CORS_ALLOW_ORIGIN=http://mmv-hub.duckdns.org:9090
      #- URL=http//mmv-hub.duckdns.org:9090
      - FORCE_HTTPS=false
      #- 'EXTENDED_CSP=default-src "self" "unsafe-inline" data: http://localhost:9090 http://219.254.35.248:9090; font-src "self" data:;'
      #- ENABLE_UPDATES=false
      - ENABLE_CSP=true
      #- EXTENDED_CSP='default-src "self" "unsafe-inline" data: http://localhost:9090 http://219.254.35.248; font-src "self" data:;'
      #- EXTENDED_CSP=""
      #- ENABLE_CSP=true
      #- EXTENDED_CSP=default-src 'self' 'unsafe-inline' data: http://localhost:9090; font-src 'self' data:  # 🔥 폰트 & 데이터 URL 허용
    env_file:
      - ./env.outline
      - ./env.slack
    restart: always
    depends_on:
      - postgres
      - redis
      - minio


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 9091:80
      - 9090:443
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs  # SSL 인증서 저장소
      #- /var/www/certbot:/var/www/certbot  # Certbot 인증용 디렉토리
      #- caddy_data:/data
      #- caddy_config:/config
    depends_on:
      - outline
  
  #certbot:
    #image: certbot/certbot
    #container_name: certbot
    #volumes:
     #- /etc/letsencrypt:/etc/letsencrypt
     #- /var/www/certbot:/var/www/certbot
    #depends_on:
      #- outline
    #entrypoint: >
      #sh -c "certbot certonly --webroot -w /var/www/certbot --email skgreenstar@naver.com --agree-tos --no-eff-email --staging -d mmv-hub.duckdns.org && tail -f /dev/null"


#volumes:
  #caddy_data:
  #caddy_config:

  #nginx:
    #image: nginx
    #ports:
      #- 9090:9090
    #volumes:
      #- ./data/nginx/:/etc/nginx/conf.d/:z
      #- ./data/certs/:/etc/ssl/certs/:z
     #- ./nginx.conf:/etc/nginx/nginx.conf:ro
    #restart: always
    #depends_on:
      #- outline
